
/* The * means "all elements" so, by using * we are settling all elements 
to have the box-sizing: border-box. * is used because different browsers 
use default elements, so we are affecting all broswers and how they work 
by using it */
*, *::after, *::before {
    box-sizing: border-box;
}

/*  :root is a CSS pseudo-class selector used to select
the element that represents the root of the document.  */
:root {
    --cell-size: 100px;
    /*The calc() CSS function lets you perform 
    calculations when specifying CSS property values  */
    --mark-size: calc(var(--cell-size)* .9);
}

body {
    margin: 0;
}

.board {
    width: 100vw;
    height: 100vh;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(3, auto)
  }
  

.cell {
/* The var() function is used to insert the value of a CSS variable.
CSS variables have access to the DOM, which means that 
you can create variables with local
or global scope, change the variables with JavaScript, and 
change the variables based on media queries.
A good way to use CSS variables is when it comes to the 
colors of your design. Instead of copy and paste the same 
colors over and over again, you can place them in variables.
*/
    width: var(--cell-size);
    height: var(--cell-size);
    border: 1px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
  }
  /* The :first-child selector is used to select the specified selector, 
  only if it is the first child of its parent.
 */
  .cell:first-child,
  .cell:nth-child(2),
  .cell:nth-child(3) {
    border-top: none;
  }
  
  .cell:nth-child(3n + 1) {
    border-left: none;
  }
  
  .cell:nth-child(3n + 3) {
    border-right: none;
  }
  
  .cell:last-child,
  .cell:nth-child(8),
  .cell:nth-child(7) {
    border-bottom: none;
  }
  
  .cell.x,
  .cell.circle {
    cursor: not-allowed;
  }
  
  .cell.x::before,
  .cell.x::after,
  .cell.circle::before {
    background-color: black;
  }
  
  .board.x .cell:not(.x):not(.circle):hover::before,
  .board.x .cell:not(.x):not(.circle):hover::after,
  .board.circle .cell:not(.x):not(.circle):hover::before {
    background-color: lightgrey;
  }
  
  .cell.x::before,
  .cell.x::after,
  /* The :not() CSS pseudo-class represents elements that do not match a list of selectors. 
  Since it prevents specific items from being selected, it is known as the negation pseudo-class. */
  .board.x .cell:not(.x):not(.circle):hover::before,
  .board.x .cell:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
  }
  
  .cell.x::before,
  .board.x .cell:not(.x):not(.circle):hover::before {
    transform: rotate(45deg);
  }
  
  .cell.x::after,
  .board.x .cell:not(.x):not(.circle):hover::after {
    transform: rotate(-45deg);
  }
  
  .cell.circle::before,
  .cell.circle::after,
  .board.circle .cell:not(.x):not(.circle):hover::before,
  .board.circle .cell:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    border-radius: 50%;
  }
  
  .cell.circle::before,
  .board.circle .cell:not(.x):not(.circle):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
  }
  
  .cell.circle::after,
  .board.circle .cell:not(.x):not(.circle):hover::after {
    width: calc(var(--mark-size) * .7);
    height: calc(var(--mark-size) * .7);
    background-color: white;
  }
  
  .winning-message {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, .9);
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 5rem;
    flex-direction: column;
  }
  
  .winning-message button {
    font-size: 3rem;
    background-color: white;
    border: 1px solid black;
    padding: .25em .5em;
    cursor: pointer;
  }
  
  .winning-message button:hover {
    background-color: black;
    color: white;
    border-color: white;
  }
  
  .winning-message.show {
    display: flex;
  }
  
/* Background Styles Only */
  
  @import url('https://fonts.googleapis.com/css?family=Raleway');
  
  * {
      font-family: Raleway;
  }
  
  .side-links {
    position: absolute;
    top: 15px;
    right: 15px;
  }
  
  .side-link {
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    margin-bottom: 10px;
    color: white;
    width: 180px;
    padding: 10px 0;
    border-radius: 10px;
  }
  
  .side-link-youtube {
    background-color: red;
  }
  
  .side-link-twitter {
    background-color: #1DA1F2;
  }
  
  .side-link-github {
    background-color: #6e5494;
  }
  
  .side-link-text {
    margin-left: 10px;
    font-size: 18px;
  }
  
  .side-link-icon {
    color: white;
    font-size: 30px;
  }